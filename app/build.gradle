apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.pp.pikachu"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    multiDexEnabled true
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    resValue "string", "googleApiKey", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
  }
  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'BASE_URL', '"https://raw.githubusercontent.com/mwgg/"';
      applicationVariants.all { variant ->
        variant.outputs.each { output ->
          def apk = output.outputFile;
          def newName;
          newName = apk.name.replace("-" + variant.buildType.name, "")
              .replace(project.name, rootProject.ext.myCapeTestDebug);
          output.outputFile = new File(apk.parentFile, newName);
        }
      }
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'BASE_URL', '"https://raw.githubusercontent.com/release/"';
      applicationVariants.all { variant ->
        variant.outputs.each { output ->
          def apk = output.outputFile;
          def newName;
          newName = apk.name.replace("-" + variant.buildType.name, "")
              .replace(project.name, rootProject.ext.myCapeTestRelease);
          output.outputFile = new File(apk.parentFile, newName);
        }
      }
    }
  }

  compileOptions {
    incremental = false
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'about_files/LICENSE-2.0.txt'
    exclude 'plugin.properties'
    exclude 'plugin.xml'
    exclude 'LICENSE.txt'
    exclude 'META-INF/eclipse.inf'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile "com.android.support:appcompat-v7:$rootProject.androidSupportVersion"
  compile "com.android.support:design:$rootProject.androidSupportVersion"

  // Butter Knife
  compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
  apt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

  // Dagger 2
  compile "com.google.dagger:dagger:$rootProject.daggerVersion"
  apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

  // Retrofit
  compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
  compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
  compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

  // Rx
  compile "io.reactivex:rxandroid:$rootProject.rxVersion"
  compile "io.reactivex:rxjava:$rootProject.rxVersion"
  compile "com.jakewharton.rxbinding:rxbinding:$rootProject.rxBindingVersion"
  compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:$rootProject.rxBindingVersion"

  // OkHttp
  compile "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
  compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"

  // Utility
  compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
  compile "org.apache.commons:commons-lang3:$rootProject.apacheCommonsVersion"
  compile "pl.droidsonroids.gif:android-gif-drawable:$rootProject.gifDrawableVersion"

  compile "com.google.android.gms:play-services:$rootProject.googlePlayServices"
  compile "com.google.android.gms:play-services-location:$rootProject.googlePlayServicesLocation"



  testCompile 'junit:junit:4.12'
  testCompile "org.robolectric:robolectric:3.4.2"
  testCompile "org.mockito:mockito-core:2.+"
}
